title: "{$desc}-=( {$p}Thao tác thuộc tính {$desc})=-"
rows: 3

op: &fn-op
  args: [ "<x>" ]
  return:
    enabled:
      condition: enabled
      name: "{$desc}[{$p}Hoạt động{$desc}] {$p}<x>"
      glow: true
    else:
      name: "{$p}<x>"

options:
  back:
    posx: 1
    posy: 1
    skull: "{$gui-back}"
    name: '{$p}Quay lại'
  decoration:
    slots: [ 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ]
    material: BROWN_STAINED_GLASS_PANE
    name: ''
  info:
    posx: 5
    posy: 1
    material: NETHER_STAR
    name: '&eThông tin'
    lore: |
      {$desc}Thao tác của một bộ sửa đổi quyết định
      cách nó sửa đổi giá trị cơ bản của thuộc tính
  add-number:
    posx: 2
    posy: 2
    glow: true
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjM3MjgxNzhhMTMzOTQzMGFhYzQ4NGZmMjI1NzNmOGVlNzRlZmY1ZGJkNGFlOTVkYjhmMmRmY2ZjMzUzYzEzMiJ9fX0='
    <<: *fn-op [ "Cộng Số" ]
    lore: |
      {$desc}Cộng tất cả các giá trị của bộ sửa đổi vào
      giá trị hiện tại của thuộc tính.
      Ví dụ, sửa đổi một thuộc tính với
      {$p}Số lượng 2 {$desc}và {$p} Số lượng 4 {$desc}với
      một {$p}Cơ sở 3 {$desc}sẽ cho kết quả là {$p}3 + 2 + 4 = 9
  multiply-scalar-1:
    posx: 5
    posy: 2
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDZhZTIxMWI0NDAzYjg5NjNjNjc0NWYzYzk4ZWJlNzNhMmI0ZTk3YzQwYTc4YjJmZDQwM2EwOWMwZmNhZDZkIn19fQ=='
    <<: *fn-op [ "Nhân (kiểu 1)" ]
    lore: |
      {$desc}Đối với mỗi bộ sửa đổi, nhân
      giá trị hiện tại của thuộc tính với {$p}(1 + x){$desc},
      trong đó x là giá trị của bộ sửa đổi cụ thể đó.
      Chức năng tương tự như {$p}Cộng vô hướng
      {$desc}nếu chỉ có một bộ sửa đổi với
      {$p}thao tác 1 hoặc 2{$desc}. Tuy nhiên, đối với nhiều
      bộ sửa đổi, nó nhân các bộ sửa đổi
      thay vì cộng chúng. Ví dụ, sửa đổi một
      thuộc tính với {$p}Số lượng 2 {$desc}và {$p}Số lượng 4
      {$desc}với {$p}Cơ sở 3 {$desc}sẽ cho kết quả là
      {$p}3 * (1 + 2) * (1 + 4) = 45
  add-scalar:
    posx: 8
    posy: 2
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMTc3YmI2NmZjNzNhOTdjZWZjYjNhNGJmZGNjYjEyMjgxZjQ0ZGQzMjZjY2QwZmYzOWQ0N2U5ODViZmVmZjM0MyJ9fX0='
    <<: *fn-op [ "Cộng Vô Hướng" ]
    lore: |
      {$desc}Nhân giá trị hiện tại của
      thuộc tính với {$p}1 + x{$desc}, trong đó x là tổng
      các giá trị của bộ sửa đổi. Ví dụ,
      sửa đổi một thuộc tính với {$p}Số lượng 2{$desc}
      và {$p}Số lượng 4 với {$p}Cơ sở 3 {$desc}sẽ cho kết quả là
      {$p}3 * (1 + 2 + 4) = 21