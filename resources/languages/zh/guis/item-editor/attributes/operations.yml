title: "{$sep}-=( {$p}属性操作{$sep} )=-"
rows: 3

op: &fn-op
  args: ["<x>"]
  return:
    enabled:
      condition: enabled
      name: "{$desc}[{$p}Active{$desc}] {$p}<x>"
      glow: true
    else:
      name: "{$p}<x>"

options:
  back:
    posx: 1
    posy: 1
    skull: "{$gui-back}"
    name: '{$p}返回'
  decoration:
    slots: [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
    material: BROWN_STAINED_GLASS_PANE
    name: ''
  info:
    posx: 5
    posy: 1
    material: NETHER_STAR
    name: '&e信息'
    lore: |
      {$p}修改器操作会描述如何
      对属性的基础值进行修改。
  add-number:
    posx: 2
    posy: 2
    glow: true
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjM3MjgxNzhhMTMzOTQzMGFhYzQ4NGZmMjI1NzNmOGVlNzRlZmY1ZGJkNGFlOTVkYjhmMmRmY2ZjMzUzYzEzMiJ9fX0='
    <<: *fn-op ["Add Number"]
    lore: |
      {$desc}把所有修改器的值加到属性的当前值上
      例如, 基础值是{$p}3{$desc}, 修改器的数值分别为{$p}2{$desc}和{$p}4{$desc}, 
      {$desc}结果为{$p}3+2+4=9
  multiply-scalar-1:
    posx: 5
    posy: 2
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDZhZTIxMWI0NDAzYjg5NjNjNjc0NWYzYzk4ZWJlNzNhMmI0ZTk3YzQwYTc4YjJmZDQwM2EwOWMwZmNhZDZkIn19fQ=='
    <<: *fn-op ["Multiply"]
    lore: |
      {$desc}对于每个修改器, 它会将属性的当前值乘上{$p}(1 + x){$desc}
      , x代表修改器的数值。
      在只带有一个{$p}操作1{$desc}或{$p}操作2{$desc}的修改器时运作, 
      但多个修改器之间会相乘而非相加。
      例如, 基础值是{$p}3{$desc}, 修改器的数值分别为{$p}2{$desc}和{$p}4{$desc}, 
      {$desc}结果为{$p}3*(1+2)*(1+4)=45
  add-scalar:
    posx: 8
    posy: 2
    skull: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMTc3YmI2NmZjNzNhOTdjZWZjYjNhNGJmZGNjYjEyMjgxZjQ0ZGQzMjZjY2QwZmYzOWQ0N2U5ODViZmVmZjM0MyJ9fX0='
    <<: *fn-op ["Add Scalar"]
    lore: |
      {$desc}以{$p}1 + x{$desc}的公式计算属性的当前值, 
      x是修改器数值之和。
      例如, 基础值是{$p}3{$desc}, 修改器的数值分别为{$p}2{$desc}和{$p}4{$desc}, 
      {$desc}结果为{$p}3*(1+2+4)=21
